{"ast":null,"code":"var _jsxFileName = \"/home/work/codevillage/react-next/todoapp/src/List/Item.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//useStateはReact.useStateのオブジェクトだが、{}で取り出すことでそのまま使える。\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = ({\n  content\n}) => {\n  _s();\n  const [isDone, setIsDone] = useState(false);\n  // useState(初期値) => [現在の状態の参照,状態を更新する関数]\n  console.log({\n    test: isDone ? \"test\" : \"ok\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => {\n        setIsDone(!isDone);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textDecoration: isDone ? \"line-through\" : \"none\"\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(Item, \"HYWL9zc5ybchE+IuBj/kTeNAANo=\");\n_c = Item;\nexport default Item;\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Item","content","_s","isDone","setIsDone","console","log","test","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","_c","$RefreshReg$"],"sources":["/home/work/codevillage/react-next/todoapp/src/List/Item.js"],"sourcesContent":["import React, { useState } from \"react\";\n//useStateはReact.useStateのオブジェクトだが、{}で取り出すことでそのまま使える。\n\nconst Item = ({ content }) => {\n    const [isDone, setIsDone] = useState(false);\n    // useState(初期値) => [現在の状態の参照,状態を更新する関数]\n    console.log({ test: isDone ? \"test\" : \"ok\" })\n    return (\n        <li>\n            <input\n                type=\"checkbox\"\n                onChange={() => {\n                    setIsDone(!isDone);\n                }}\n            />\n            {/* jsx内ではJSの処理を使うには{}で括る必要がある */}\n            <span\n                style={\n                    { textDecoration: isDone ? \"line-through\" : \"none\" }\n                }\n            >{content}</span>\n        </li >\n    );\n};\n\nexport default Item;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACAQ,OAAO,CAACC,GAAG,CAAC;IAAEC,IAAI,EAAEJ,MAAM,GAAG,MAAM,GAAG;EAAK,CAAC,CAAC;EAC7C,oBACIJ,OAAA;IAAAS,QAAA,gBACIT,OAAA;MACIU,IAAI,EAAC,UAAU;MACfC,QAAQ,EAAEA,CAAA,KAAM;QACZN,SAAS,CAAC,CAACD,MAAM,CAAC;MACtB;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEFf,OAAA;MACIgB,KAAK,EACD;QAAEC,cAAc,EAAEb,MAAM,GAAG,cAAc,GAAG;MAAO,CACtD;MAAAK,QAAA,EACHP;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAACZ,EAAA,CApBIF,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAsBV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}